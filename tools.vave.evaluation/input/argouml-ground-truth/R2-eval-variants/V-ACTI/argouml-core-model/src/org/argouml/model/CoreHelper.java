package org.argouml.model;

import java.util.Collection;
import java.util.List;


public interface CoreHelper {
	boolean isSubType(Object type,Object subType);
	Collection getAllSupertypes(Object element);
	Collection getSupertypes(Object generalizableElement);
	Collection getAssociateEndsInh(Object classifier);
	void removeFeature(Object cls,Object feature);
	void removeLiteral(Object enumeration,Object literal);
	void setOperations(Object classifier,List operations);
	void setAttributes(Object classifier,List attributes);
	Collection getAttributesInh(Object classifier);
	Collection getOperationsInh(Object classifier);
	Collection getParents(Object generalizableElement);
	List getReturnParameters(Object operation);
	Object getSpecification(Object object);
	Collection getSubtypes(Object cls);
	Collection getAllBehavioralFeatures(Object element);
	List getBehavioralFeatures(Object classifier);
	Collection getAllInterfaces(Object ns);
	Collection getAllClasses(Object ns);
	Collection getRealizedInterfaces(Object cls);
	Collection getExtendedClassifiers(Object element);
	Object getGeneralization(Object achild,Object aparent);
	String getBody(Object comment);
	Collection getFlows(Object source,Object target);
	Collection getExtendingElements(Object element);
	Collection getExtendingClassifiers(Object classifier);
	Collection getAllComponents(Object ns);
	Collection getAllDataTypes(Object ns);
	Collection getAllNodes(Object ns);
	Collection getAssociatedClassifiers(Object aclassifier);
	Collection getAssociations(Object from,Object to);
	Collection getAllClassifiers(Object namespace);
	Collection getAssociations(Object oclassifier);
	Object getAssociationEnd(Object type,Object assoc);
	Collection getAllAttributes(Object classifier);
	Collection getAllVisibleElements(Object ns);
	Object getSource(Object relationship);
	Object getDestination(Object relationship);
	Collection getDependencies(Object supplier,Object client);
	Object getPackageImport(Object supplier,Object client);
	Collection getPackageImports(Object client);
	Collection getRelationships(Object source,Object dest);
	boolean isValidNamespace(Object element,Object namespace);
	Object getFirstSharedNamespace(Object ns1,Object ns2);
	Collection getAllPossibleNamespaces(Object modelElement,Object model);
	Collection getChildren(Object element);
	Collection getAllRealizedInterfaces(Object element);
	boolean hasCompositeEnd(Object association);
	boolean equalsAggregationKind(Object associationEnd,String kindType);
	void removeAnnotatedElement(Object handle,Object me);
	void removeClientDependency(Object handle,Object dep);
	void removeConstraint(Object handle,Object cons);
	void removeOwnedElement(Object handle,Object value);
	void removeParameter(Object handle,Object parameter);
	void removeQualifier(Object handle,Object qualifier);
	void removeSourceFlow(Object handle,Object flow);
	void removeSupplierDependency(Object supplier,Object dependency);
	void removeTargetFlow(Object handle,Object flow);
	void removeTemplateArgument(Object binding,Object argument);
	void removeTemplateParameter(Object handle,Object parameter);
	void addAnnotatedElement(Object comment,Object annotatedElement);
	void addClient(Object dependency,Object element);
	void addClientDependency(Object handle,Object dependency);
	void addComment(Object element,Object comment);
	void addConnection(Object handle,Object connection);
	void addConnection(Object handle,int position,Object connection);
	void addConstraint(Object handle,Object mc);
	void addDeploymentLocation(Object handle,Object node);
	void addFeature(Object handle,int index,Object f);
	void addLiteral(Object handle,int index,Object literal);
	void addFeature(Object handle,Object f);
	void addLink(Object handle,Object link);
	void addMethod(Object handle,Object method);
	void addOwnedElement(Object handle,Object me);
	void addParameter(Object handle,int index,Object parameter);
	void addParameter(Object handle,Object parameter);
	void addQualifier(Object handle,int position,Object qualifier);
	void addRaisedSignal(Object handle,Object sig);
	void addSourceFlow(Object handle,Object flow);
	void addSupplier(Object handle,Object element);
	void addSupplierDependency(Object supplier,Object dependency);
	void addTargetFlow(Object handle,Object flow);
	void addTemplateArgument(Object handle,int index,Object argument);
	void addTemplateArgument(Object handle,Object argument);
	void addTemplateParameter(Object handle,int index,Object parameter);
	void addTemplateParameter(Object handle,Object parameter);
	void setAbstract(Object handle,boolean isAbstract);
	void setActive(Object handle,boolean isActive);
	void setAggregation(Object handle,Object aggregationKind);
	void setAnnotatedElements(Object handle,Collection elems);
	void setAssociation(Object handle,Object association);
	void setLeaf(Object handle,boolean isLeaf);
	void setRaisedSignals(Object handle,Collection raisedSignals);
	void setBody(Object handle,Object expr);
	@Deprecated void setChangeability(Object handle,Object ck);
	void setReadOnly(Object handle,boolean isReadOnly);
	void setChild(Object handle,Object child);
	void setConcurrency(Object handle,Object concurrencyKind);
	void setConnections(Object handle,Collection ends);
	void setDefaultElement(Object handle,Object element);
	void setDefaultValue(Object handle,Object expression);
	void setDiscriminator(Object handle,String discriminator);
	void setFeature(Object classifier,int index,Object feature);
	void setFeatures(Object classifier,Collection features);
	void setContainer(Object handle,Object component);
	void setInitialValue(Object attribute,Object expression);
	void setKind(Object handle,Object kind);
	void setModelElementContainer(Object handle,Object container);
	void setMultiplicity(Object handle,Object arg);
	void setName(Object handle,String name);
	void setBody(Object handle,String body);
	void setNamespace(Object handle,Object ns);
	void setNavigable(Object handle,boolean flag);
	void setOrdering(Object handle,Object ordering);
	void setOwner(Object handle,Object owner);
	void setStatic(Object element,boolean isStatic);
	void setParameter(Object handle,Object parameter);
	void setParameters(Object handle,Collection parameters);
	void setParent(Object handle,Object parent);
	void setPowertype(Object handle,Object powerType);
	void setQualifiers(Object handle,List qualifiers);
	void setQuery(Object handle,boolean isQuery);
	void setResident(Object handle,Object resident);
	void setResidents(Object handle,Collection residents);
	void setRoot(Object handle,boolean isRoot);
	void setSources(Object handle,Collection specifications);
	void setSpecification(Object handle,boolean isSpecification);
	void setSpecification(Object method,Object specification);
	void setSpecification(Object operation,String specification);
	void setSpecifications(Object handle,Collection specifications);
	void addStereotype(Object modelElement,Object stereo);
	void addAllStereotypes(Object modelElement,Collection stereos);
	void removeStereotype(Object handle,Object stereo);
	void clearStereotypes(Object handle);
	@Deprecated void setTaggedValue(Object handle,String tag,String value);
	@Deprecated void setTargetScope(Object handle,Object targetScope);
	void setType(Object handle,Object type);
	void setVisibility(Object handle,Object visibility);
	void removeDeploymentLocation(Object handle,Object node);
	void removeConnection(Object handle,Object connection);
	void addElementResidence(Object handle,Object residence);
	void removeElementResidence(Object handle,Object residence);
	void setEnumerationLiterals(Object enumeration,List literals);
	Collection<String>getAllMetatypeNames();
	Collection<String>getAllMetaDatatypeNames();
}



